import { Container } from 'inversify';
import ILogger from './src/interface/ILogger.interface';
import IResponser from './src/interface/IResponser.interface';
import IEntity from './src/interface/IEntity.interface';
import ITimestamp from './src/interface/ITimestamp.Interface';
import INotify from './src/interface/INotify.interface';
import IEmail from './src/interface/IEmail.interface';
import IAuth from './src/interface/IAuth.interface';
import IEntityType from './src/interface/IEntityType.interface';
import IPolicy from './src/interface/IPolicy.interface';
import ISemaphore from './src/interface/ISemaphore.interface';
import IValidation from './src/interface/IValid.interface';
import IAutomation from './src/interface/IAutomation.interface';
import IETCD from './src/interface/IETCD.interface';
import ETCD from './src/helper/ETCD.helper';
import Semaphore from './src/helper/Semaphore.helper';
import EntityType from './src/helper/EntityType.helper';
import Auth from './src/helper/Auth.helper';
import Email from './src/helper/Email.helper';
import Notify from './src/helper/Notify.helper';
import Timestamp from './src/helper/Timestamp.helper';
import Logger from './src/helper/Logger.helper';
import Entity from './src/helper/Entity.helper';
import Responser from './src/helper/Response.helper';
import Policy from './src/helper/Policy.helper';
import Validation from './src/helper/Valid.helper';
import Automation from './src/helper/Automation.helper';
import EntityController from './src/controller/v1/Entity.controller';
import HomeController from './src/controller/v1/Home.controller';
import AreaController from './src/controller/v1/Area.controller';
import InvitationController from './src/controller/v1/Invitation.controller';
import UserController from './src/controller/v1/User.controller';
import MemberController from './src/controller/v1/Member.controller';
import EntityTypeController from './src/controller/v1/EntityType.Controller';
import VersionController from './src/controller/v1/Version.controller';
import SystemController from './src/controller/v1/System.controller';
import AutomationController from './src/controller/v1/Automation.controller';

let container = new Container();

container.bind<ISemaphore>('Semaphore').to(Semaphore).inSingletonScope();
container.bind<IValidation>('Validation').to(Validation).inSingletonScope();
container.bind<IAutomation>('Automation').to(Automation).inSingletonScope();
container.bind<IEntity>('Entity').to(Entity).inSingletonScope();
container.bind<IEmail>('Email').to(Email).inSingletonScope();
container.bind<ILogger>('Logger').to(Logger).inSingletonScope();
container.bind<INotify>('Notify').to(Notify).inSingletonScope();
container.bind<IAuth>('Auth').to(Auth).inSingletonScope();
container.bind<IEntityType>('EntityType').to(EntityType).inSingletonScope();
container.bind<IResponser>('Responser').to(Responser).inSingletonScope();
container.bind<ITimestamp>('Timestamp').to(Timestamp).inSingletonScope();
container.bind<IPolicy>('Policy').to(Policy).inSingletonScope();
container.bind<IETCD>('ETCD').to(ETCD).inSingletonScope();
container.bind<EntityController>('EntityController').to(EntityController).inSingletonScope();
container.bind<HomeController>('HomeController').to(HomeController).inSingletonScope();
container.bind<AreaController>('AreaController').to(AreaController).inSingletonScope();
container.bind<UserController>('UserController').to(UserController).inSingletonScope();
container.bind<InvitationController>('InvitationController').to(InvitationController).inSingletonScope();
container.bind<MemberController>('MemberController').to(MemberController).inSingletonScope();
container.bind<EntityTypeController>('EntityTypeController').to(EntityTypeController).inSingletonScope();
container.bind<VersionController>('VersionController').to(VersionController).inSingletonScope();
container.bind<SystemController>('SystemController').to(SystemController).inSingletonScope();
container.bind<AutomationController>('AutomationController').to(AutomationController).inSingletonScope();

export { container };
